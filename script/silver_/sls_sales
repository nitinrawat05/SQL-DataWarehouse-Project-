## Data Quality Checks on Bronze Layer


-- üîç Check for Invalid Ship Dates
SELECT 
    NULLIF(sls_ship_dt, 0) AS sls_ship_dt
FROM bronze.crm_sales_details 
WHERE 
    sls_ship_dt <= 0                      -- Invalid zero date
    OR LEN(sls_ship_dt) != 8             -- Must be in YYYYMMDD format
    OR sls_ship_dt > 20500101            -- Unrealistic future date
    OR sls_ship_dt < 19000101;           -- Unrealistic past date

-- üîç Check for Inconsistent Date Sequences (Order > Ship or Due)
SELECT *
FROM bronze.crm_sales_details
WHERE 
    sls_order_dt > sls_ship_dt 
    OR sls_order_dt > sls_due_dt;

-- üîç Check for Inconsistent Sales, Quantity, and Price Relationships
SELECT DISTINCT
    sls_sales AS old_sls_sales,
    sls_quantity,
    sls_price AS old_sls_price,

    -- Recalculated Sales if values are missing or incorrect
    CASE 
        WHEN sls_sales IS NULL 
             OR sls_sales <= 0 
             OR sls_sales != sls_quantity * ABS(sls_price)
        THEN sls_quantity * ABS(sls_price)
        ELSE sls_sales
    END AS sls_sales,

    -- Recalculated Price if missing or invalid
    CASE 
        WHEN sls_price IS NULL 
             OR sls_price <= 0 
        THEN sls_sales / NULLIF(sls_quantity, 0)
        ELSE sls_price
    END AS sls_price

FROM bronze.crm_sales_details
WHERE 
    sls_sales != sls_quantity * sls_price
    OR sls_sales IS NULL 
    OR sls_quantity IS NULL 
    OR sls_price IS NULL
    OR sls_sales <= 0 
    OR sls_quantity <= 0 
    OR sls_price <= 0;

 ## Silver Layer Table Creation & Data Insertion


-- üö´ Drop Silver Table if Already Exists
IF OBJECT_ID('silver.crm_sales_details', 'U') IS NOT NULL
    DROP TABLE silver.crm_sales_details;

-- ‚úÖ Create Clean Silver Table
CREATE TABLE silver.crm_sales_details (
    sls_ord_num NVARCHAR(50),
    sls_prd_key NVARCHAR(50),
    sls_cust_id INT,
    sls_order_dt DATE,
    sls_ship_dt DATE,
    sls_due_dt DATE,
    sls_sales INT,
    sls_quantity INT,
    sls_price INT,
    dwh_create_date DATETIME2 DEFAULT GETDATE()  -- Audit Column
);

-- üöÄ Load Cleaned & Validated Data from Bronze to Silver
INSERT INTO silver.crm_sales_details (
    sls_ord_num,
    sls_prd_key,
    sls_cust_id,
    sls_order_dt,
    sls_ship_dt,
    sls_due_dt,
    sls_sales,
    sls_quantity,
    sls_price
)
SELECT  
    sls_ord_num,
    sls_prd_key,
    sls_cust_id,

    -- üßØ Safe Conversion for Dates
    TRY_CAST(CAST(sls_order_dt AS VARCHAR) AS DATE) AS sls_order_dt,
    TRY_CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE) AS sls_ship_dt,
    TRY_CAST(CAST(sls_due_dt AS VARCHAR) AS DATE) AS sls_due_dt,

    -- üßÆ Clean Sales Calculation
    CASE 
        WHEN sls_sales IS NULL 
             OR sls_sales <= 0 
             OR sls_sales != sls_quantity * ABS(sls_price)
        THEN sls_quantity * ABS(sls_price)
        ELSE sls_sales
    END AS sls_sales,

    sls_quantity,

    -- üí∞ Clean Price Calculation
    CASE 
        WHEN sls_price IS NULL 
             OR sls_price <= 0 
        THEN sls_sales / NULLIF(sls_quantity, 0)
        ELSE sls_price
    END AS sls_price

FROM DataWarehouse.bronze.crm_sales_details;
